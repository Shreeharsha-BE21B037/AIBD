# -*- coding: utf-8 -*-
"""Assignment_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XaiCmELTYll-yQs4YylqdwlQDGL9T81c
"""

# Import relavent libraries
import pandas as pd
import statistics
import matplotlib.pyplot as plt
from collections import Counter
import numpy as np
import seaborn as sns
import scipy.stats

# Insert file location as input
df = pd.read_csv("C:\\Users\\shree\\OneDrive\\Desktop\\Academics\\AIBD\\Assignment 1\\Data_for_assignment1.csv")

# Number of unique sources of trees and types in the dataset
unique = df['Source'].unique()
print(f'The number unique Sources is {len(unique)}, which are {unique}')

# Create two different Datasets
Deciduous = df[df["Source"].isin(["Deciduous"])]
Evergreen = df[df["Source"].isin(["Evergreen"])]

# Divide each dataset for Chlorophyll A and B
Deciduous_Ch_a = []
Deciduous_Ch_b = []
Evergreen_Ch_a = []
Evergreen_Ch_b = []
for i in range(len(Deciduous)):
    Deciduous_Ch_a.append(Deciduous.iloc[i]["Chlorophyll_a"])
    Deciduous_Ch_b.append(Deciduous.iloc[i]["Chlorophyll_b"])
for i in range(len(Evergreen)):
    Evergreen_Ch_a.append(Evergreen.iloc[i]["Chlorophyll_a"])
    Evergreen_Ch_b.append(Evergreen.iloc[i]["Chlorophyll_b"])

"""### Data Visualization

#### Deciduous forest

Q1) Visualize the distribution of chlorophyll a and chlorophyll b values using histogram or
density plots in Deciduous forest.
"""

sns.set_style('whitegrid')
Plot_DCa = sns.kdeplot(np.array(Deciduous_Ch_a), legend = True, color = 'limegreen')
Plot_DCb = sns.kdeplot(np.array(Deciduous_Ch_b), legend = True, color = 'orange')

plt.legend(labels = ['Chlorophyll a (DCa)', 'Chlorophyll b (DCb)'])
plt.title('Distribution of chlorophyll a and chlorophyll b levels in Deciduous forests')
plt.xlabel('Chlorophyll Levels')
plt.savefig("Deciduous.png")
plt.savefig("Deciduous.svg", format='svg')
plt.show()

"""#### Evergreen forest

Q2) Visualize the distribution of chlorophyll a and chlorophyll b values using histogram or
density plots in Evergreen forests
"""

sns.set_style('whitegrid')
Plot_ECa = sns.kdeplot(np.array(Evergreen_Ch_a), legend = True, color = 'darkgreen')
Plot_ECb = sns.kdeplot(np.array(Evergreen_Ch_b), legend = True, color = 'red')

plt.legend(labels = ['Chlorophyll a (ECa)', 'Chlorophyll b (ECb)'])
plt.title('Distribution of chlorophyll a and chlorophyll b levels in Evergreen forests')
plt.xlabel('Chlorophyll Levels')
plt.savefig("Evergreen.png")
plt.savefig("Evergreen.svg", format='svg')
plt.show()

"""#### Both

Q3) Visualize the distribution of chlorophyll a and chlorophyll b values using histogram or density plots without separating the measurements from each forests
"""

sns.set_style('whitegrid')
Plot_a = sns.kdeplot(np.array(df['Chlorophyll_a']), legend = True, color = 'blue')
Plot_b = sns.kdeplot(np.array(df['Chlorophyll_b']), legend = True, color = 'black')

plt.legend(labels = ['Chlorophyll a', 'Chlorophyll b'])
plt.title('Distribution of chlorophyll a and chlorophyll b levels in forests')
plt.xlabel('Chlorophyll Levels')
plt.savefig("Both.png")
plt.savefig("Both.svg", format='svg')
plt.show()

"""#### All Plots Combined

Q4) Plot 1, 2 and 3 in same plot together and explore how it changes
"""

sns.set_style('whitegrid')
# Chlorophyll a
Plot_DCa = sns.kdeplot(np.array(Deciduous_Ch_a), legend = True, color = 'limegreen', linestyle='dashed')
Plot_ECa = sns.kdeplot(np.array(Evergreen_Ch_a), legend = True, color = 'darkgreen', linestyle='dashed')
Plot_a = sns.kdeplot(np.array(df['Chlorophyll_a']), legend = True, color = 'blue')

# Chlorophyll b
Plot_DCb = sns.kdeplot(np.array(Deciduous_Ch_b), legend = True, color = 'orange', linestyle='dashed')
Plot_ECb = sns.kdeplot(np.array(Evergreen_Ch_b), legend = True, color = 'red', linestyle='dashed')
Plot_b = sns.kdeplot(np.array(df['Chlorophyll_b']), legend = True, color = 'black')

plt.legend(labels = ['DCa','ECa','Ca','DCb','ECb','Cb'])
plt.title('Distribution of chlorophyll level in forests')
plt.xlabel('Chlorophyll Levels')
plt.savefig("Combined.png")
plt.savefig("Combined.svg", format='svg')
plt.show()

"""### Central Tendency

Q5) Calculate summary statistics (mean, median, mode and standard deviation) of chlorophyll
a and chlorophyll b measurements from Deciduous forests separately, Evergreen forests
separately and both the forests together.
"""

#function to calculate mode, such that if all unique values than, no mode is returned
def mode(lst):
    n = len(lst)
    data = Counter(lst)
    mode = dict(data)
    mode_value = [k for k, v in mode.items() if v == max(list(data.values()))]
    if len(mode) == n:
        get_mode = "No Mode"
    else:
        get_mode = map(str, mode)
    return get_mode

"""#### Deciduous forest"""

# Chlorophyll a
mean_DCa = statistics.mean(Deciduous_Ch_a)
median_DCa = statistics.median(Deciduous_Ch_a)
stdev_DCa = statistics.stdev(Deciduous_Ch_a)
mode_DCa = mode(Deciduous_Ch_a)

print("\x1B[4m" +'\033[1m' + 'Deciduous' +'\033[0m'+ "\x1B[0m")
print('\033[1m' + 'Chlorophyll a:'+'\033[0m')
print(f'Mean               : {mean_DCa}')
print(f'Median             : {median_DCa}')
print(f'Mode               : {mode_DCa}')
print(f'Standard Deviation : {stdev_DCa}\n')

# Chlorophyll b
mean_DCb = statistics.mean(Deciduous_Ch_b)
median_DCb = statistics.median(Deciduous_Ch_b)
mode_DCb = mode(Deciduous_Ch_b)
stdev_DCb = statistics.stdev(Deciduous_Ch_b)

print('\033[1m' + 'Chlorophyll b:'+'\033[0m')
print(f'Mean               : {mean_DCb}')
print(f'Median             : {median_DCb}')
print(f'Mode               : {mode_DCb}')
print(f'Standard Deviation : {stdev_DCb}\n')

"""#### Evergreen forest"""

# Chlorophyll a
mean_ECa = statistics.mean(Evergreen_Ch_a)
median_ECa =statistics.median(Evergreen_Ch_a)
mode_ECa = mode(Evergreen_Ch_a)
stdev_ECa = statistics.stdev(Evergreen_Ch_a)

print("\x1B[4m" +'\033[1m' + 'Evergreen' +'\033[0m'+ "\x1B[0m")
print('\033[1m' + 'Chlorophyll a:'+'\033[0m')
print(f'Mean               : {mean_ECa}')
print(f'Median             : {median_ECa}')
print(f'Mode               : {mode_ECa}')
print(f'Standard Deviation : {stdev_ECa}\n')

# Chlorophyll b
mean_ECb = statistics.mean(Evergreen_Ch_b)
median_ECb = statistics.median(Evergreen_Ch_b)
mode_ECb = mode(Evergreen_Ch_b)
stdev_ECb = statistics.stdev(Evergreen_Ch_b)

print('\033[1m' + 'Chlorophyll b:'+'\033[0m')
print(f'Mean               : {mean_ECb}')
print(f'Median             : {median_ECb}')
print(f'Mode               : {mode_ECb}')
print(f'Standard Deviation : {stdev_ECb}\n')

"""#### Together"""

Ca = df['Chlorophyll_a']
Cb = df['Chlorophyll_b']

mean_Ca = statistics.mean(Ca)
median_Ca = statistics.median(Ca)
mode_Ca = mode(Ca)
stdev_Ca = statistics.stdev(Ca)

print("\x1B[4m" +'\033[1m' + 'Together' +'\033[0m'+ "\x1B[0m")
print('\033[1m' + 'Chlorophyll a:'+'\033[0m')
print(f'Mean               : {mean_Ca}')
print(f'Median             : {median_Ca}')
print(f'Mode               : {mode_Ca}')
print(f'Standard Deviation : {stdev_Ca}\n')

# Chlorophyll b
mean_Cb = statistics.mean(Cb)
median_Cb = statistics.median(Cb)
mode_Cb = mode(Cb)
stdev_Cb = statistics.stdev(Cb)

print('\033[1m' + 'Chlorophyll b:'+'\033[0m')
print(f'Mean               : {mean_Cb}')
print(f'Median             : {median_Cb}')
print(f'Mode               : {mode_Cb}')
print(f'Standard Deviation : {stdev_Cb}\n')

"""### Box Plots

Q6) In a same boxplot, compare how the distribution of chlorophyll a and chlorophyll b values
compare in Deciduous forests and Evergreen forests.
"""

CA_Decidious =np.column_stack((Deciduous_Ch_a, Deciduous_Ch_b)) # Combined Array for Deciduous Forests
df_Deciduous = pd.DataFrame(CA_Decidious, columns = ['Chlorophyll_a', 'Chlorophyll_b'])

CA_Evergreen = np.column_stack((Evergreen_Ch_a, Evergreen_Ch_b))
df_Evergreen = pd.DataFrame(CA_Evergreen, columns = ['Chlorophyll_a', 'Chlorophyll_b'])

"""#### Deciduous Forest"""

my_pal = {'Chlorophyll_a' : 'deepskyblue', 'Chlorophyll_b' : 'limegreen'}
sns.boxplot(df_Deciduous, palette = my_pal, flierprops={"marker": "o"})
plt.xlabel('Deciduous Forest')
plt.ylabel('Chlorophyll levels')
plt.savefig("Deciduous_Box.png")
plt.savefig("Deciduous_Box.svg", format='svg')
plt.show()

"""#### Evergreen forests"""

my_pal1 = {'Chlorophyll_a' : 'deepskyblue', 'Chlorophyll_b' : 'limegreen'}
sns.boxplot(df_Evergreen, palette = my_pal1, flierprops={"marker": "o"}, fliersize = 5)
plt.xlabel('Evergreen Forest')
plt.ylabel('Chlorophyll levels')
plt.savefig("Evergreen_Box.png")
plt.savefig("Evergreen_Box.svg", format='svg')
plt.show()

"""### Hypothesis Testing (Variance)

Q7) Are the variances between chlorophyll a and chlorophyll b measurements differ
significantly? Perform appropriate statistical tests to support your claim. Compare
variances of chlorophyll content from Deciduous forests separately, Evergreen forests
separately and both the forests together.

#### Deciduous Forests
"""

Var_DCa = statistics.variance(Deciduous_Ch_a)
Var_DCb = statistics.variance(Deciduous_Ch_b)

print("\x1B[4m" +'\033[1m' + 'Deciduous:' +'\033[0m'+ "\x1B[0m")
print(f'The standard deviation of chlorophyll a levels is {Var_DCa}')
print(f'The standard deviation of chlorophyll b levels is {Var_DCb}')

"""Null Hypothesis: variance of Chlorophyll a levels is equal to the variance of Chlorophyll b levels in deciduous forests

Alternate Hypothesis: variance of Chlorophyll a levels is not equal to the variance of Chlorophyll b levels in deciduous forests

We decide by performing F-test on these sample variances
"""

variance_1 = Var_DCa
variance_2 = Var_DCb

# Degrees of Freedom
v_1 = len(Deciduous_Ch_a) - 1
v_2 = len(Deciduous_Ch_b) - 1

F = variance_1/variance_2

level_of_significance = 0.05

print(f'F_value = {F,6}')
print(f'F\'_value = {scipy.stats.f.ppf(1-level_of_significance, v_1, v_2)}')

"""Since F'_value >/ F_value. Reject Ho

Conclusion: Variance of Chlorophyll a is not equal to the variance of cholorophyll b in decidious forests

#### Evergreen Forests
"""

Var_ECa = statistics.variance(Evergreen_Ch_a)
Var_ECb = statistics.variance(Evergreen_Ch_b)

print("\x1B[4m" +'\033[1m' + 'Evergreen:' +'\033[0m'+ "\x1B[0m")
print(f'The standard deviation of chlorophyll a levels is {Var_ECa}')
print(f'The standard deviation of chlorophyll b levels is {Var_ECb}')

"""Null Hypothesis: variance of Chlorophyll a levels is equal to the variance of Chlorophyll b levels in Evergreen forests

Alternate Hypothesis: variance of Chlorophyll a levels is not equal to the variance of Chlorophyll b levels in Evergreen forests

We decide by performing F-test on these sample variances
"""

variance_1 = Var_ECa
variance_2 = Var_ECb

# Degrees of Freedom
v_1 = len(Evergreen_Ch_a) - 1
v_2 = len(Evergreen_Ch_b) - 1

F = variance_1/variance_2

level_of_significance = 0.05

print(f'F_value = {F}')
print(f'F\'_value = {scipy.stats.f.ppf(1-level_of_significance, v_1, v_2)}')

"""Since F'_value ≯  F_value. Reject Ho

Conclusion: Variance of Chlorophyll a is not equal to the variance of cholorophyll b in decidious forests

#### Together
"""

Ca = df['Chlorophyll_a']
Cb = df['Chlorophyll_b']

variance_Ca = statistics.variance(Ca)
variance_Cb = statistics.variance(Cb)

print("\x1B[4m" +'\033[1m' + 'Together:' +'\033[0m'+ "\x1B[0m")
print(f'The standard deviation of chlorophyll a levels is {variance_Ca}')
print(f'The standard deviation of chlorophyll b levels is {variance_Cb}')

"""Null Hypothesis: variance of Chlorophyll a levels is equal to the variance of Chlorophyll b levels

Alternate Hypothesis: variance of Chlorophyll a levels is not equal to the variance of Chlorophyll b levels

We decide by performing F-test on these sample variances
"""

variance_1 = variance_Ca
variance_2 = variance_Cb

# Degrees of Freedom
v_1 = len(Ca) - 1
v_2 = len(Cb) - 1

F = variance_1/variance_2

level_of_significance = 0.05

print(f'F_value = {F}')
print(f'F\'_value = {scipy.stats.f.ppf(1-level_of_significance, v_1, v_2)}')

"""Since F'_value ≯  F_value. Reject Ho

Conclusion: Variance of Chlorophyll a is not equal to the variance of cholorophyll b overall

### Hypothesis Testing (Mean)

Q8) Finally, test whether the mean of chlorophyll a is greater than mean of chlorophyll b using
appropriate statistical test in all three combinations: Deciduous forests separately,
Evergreen forests separately and both the forests together. Clearly state your null
hypothesis, chosen significance criteria and the result of hypothesis testing.

#### Deciduous Forests
"""

mean_DCa = statistics.mean(Deciduous_Ch_a)
mean_DCb = statistics.mean(Deciduous_Ch_b)

print("\x1B[4m" +'\033[1m' + 'Deciduous:' +'\033[0m'+ "\x1B[0m")
print(f'The mean of chlorophyll a levels is {mean_DCa}')
print(f'The mean of chlorophyll b levels is {mean_DCb}')

"""Since both chlorophyll levels are messure from the same tree, we used paired sample t-test for hypothesis testing

Null Hypothesis: The mean of chlorophyll a is less than mean of chlorophyll b

Alternate Hypothesis: The mean of chlorophyll a is greater than mean of chlorophyll b
"""

significance_value = 0.05
scipy.stats.ttest_rel(Deciduous_Ch_a, Deciduous_Ch_b, alternative='greater')

"""Since the p-value is much smaller than 0.05, we reject the null hypothesis.

Conclusion: mean of chlorophyll levels is higher for chlorophyll a than chlorophyll b in Deciduous Forests

#### Evergreen
"""

mean_ECa = statistics.mean(Evergreen_Ch_a)
mean_ECb = statistics.mean(Evergreen_Ch_b)

print("\x1B[4m" +'\033[1m' + 'Evergreen:' +'\033[0m'+ "\x1B[0m")
print(f'The mean of chlorophyll a levels is {mean_ECa}')
print(f'The mean of chlorophyll b levels is {mean_ECb}')

"""Since both chlorophyll levels are messure from the same tree, we used paired sample t-test for hypothesis testing

Null Hypothesis: The mean if chlorophyll a is less than mean of chlorophyll b

Alternate Hypothesis: The mean if chlorophyll a is greater than mean of chlorophyll b
"""

significance_value = 0.05
scipy.stats.ttest_rel(Evergreen_Ch_a, Evergreen_Ch_b, alternative='greater')

"""Since the p-value is much smaller than 0.05, we reject the null hypothesis.

Conclusion: mean of chlorophyll levels are higher for chlorophyll a than chlorophyll b in Evergreen Forests

#### Together
"""

Ca = df['Chlorophyll_a']
Cb = df['Chlorophyll_b']

mean_Ca = statistics.mean(Ca)
mean_Cb = statistics.mean(Cb)

print("\x1B[4m" +'\033[1m' + 'Together:' +'\033[0m'+ "\x1B[0m")
print(f'The mean of chlorophyll a levels is {mean_Ca}')
print(f'The mean of chlorophyll b levels is {mean_Cb}')

"""Since both chlorophyll levels are messure from the same tree, we used paired sample t-test for hypothesis testing

Null Hypothesis: Thmean of chlorophyll a is lesser than mean of chlorophyll b  0

Alternate Hypothes The mean of chlorophyll a is lgreater than mean of chlorophyll b  = 0
"""

significance_value = 0.05
scipy.stats.ttest_rel(Ca, Cb, alternative='greater')

"""Since the p-value is much smaller than 0.05, we reject the null hypothesis.

Conclusion: mean of chlorophyll levels arhighernt for chlorophyll thannd chlorophyll bn  iboen Forests
"""