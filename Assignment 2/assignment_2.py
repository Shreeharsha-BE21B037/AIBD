# -*- coding: utf-8 -*-
"""Assignment_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17NLZ9x2erCQd1N1d5O9vsYTAT_NvNi8Z

## Assignment 2

### Data Set-up
"""

# Importing packages
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
from sklearn.cluster import AgglomerativeClustering
from scipy.cluster.hierarchy import linkage, dendrogram, set_link_color_palette
warnings.filterwarnings('ignore')

# Import dataset
df = pd.read_csv("C:\\Users\\shree\\OneDrive\\Desktop\\Academics\\AIBD\\Assignment 2\\khan_train.csv").transpose() # Transpose to analyze dendograms for cell types
df = df.drop("Unnamed: 0") # remove Sl.no
df

"""### Euclidean Distance

#### Clustering
"""

Top10_cutoffs_Euclidean = []
[fig, ax] = plt.subplots(nrows=2, ncols=2, figsize=(25, 20))

Z1 = linkage(df,method='complete',metric='euclidean')
Top10_cutoffs_Euclidean.append(list(Z1[-10:,2]))
R1 = dendrogram(Z1, ax=ax[0,0]);

Z2 = linkage(df,method='single',metric='euclidean')
R2 = dendrogram(Z2, ax=ax[0,1]);
Top10_cutoffs_Euclidean.append(list(Z2[-10:,2]))

Z3 = linkage(df,method='average',metric='euclidean')
R3 = dendrogram(Z3, ax=ax[1,0]);
Top10_cutoffs_Euclidean.append(list(Z3[-10:,2]))

Z4 = linkage(df,method='centroid',metric='euclidean')
R4 = dendrogram(Z4, ax=ax[1,1]);
Top10_cutoffs_Euclidean.append(list(Z4[-10:,2]))

fig.suptitle('Hierarchical Clustering',fontsize= 30)
ax[0,0].set_title('Complete Linkage',fontsize= 20)
ax[0,1].set_title('Simple Linkage',fontsize= 20)
ax[1,0].set_title('Average Linkage',fontsize= 20)
ax[1,1].set_title('Centroid Linkage',fontsize= 20)

plt.tight_layout(pad = 2)
# plt.savefig("Euclidean.svg")
plt.show()

"""#### Thresholds"""

Top10_cutoffs_Euclidean = []

Z1 = linkage(df,method='complete',metric='euclidean')
Z2 = linkage(df,method='single',metric='euclidean')
Z3 = linkage(df,method='average',metric='euclidean')
Z4 = linkage(df,method='centroid',metric='euclidean')

Top10_cutoffs_Euclidean.append(list(Z1[-10:,2]))
Top10_cutoffs_Euclidean.append(list(Z2[-10:,2]))
Top10_cutoffs_Euclidean.append(list(Z3[-10:,2]))
Top10_cutoffs_Euclidean.append(list(Z4[-10:,2]))

Top_10_df = pd.DataFrame(Top10_cutoffs_Euclidean)
Top_10_df["Linkage"] = ['Complete', 'Single', 'Average', 'centroid']
Top_10_df["Threshold"] = [0.7*max(Z1[:,2]),0.7*max(Z2[:,2]),0.7*max(Z3[:,2]),0.7*max(Z4[:,2])]
Top_10_df.insert(0, 'Linkage', Top_10_df.pop('Linkage'))
Top_10_df
# print(Top_10_df.to_latex(index=False,formatters={"Linkage": str.upper},float_format="{:.1f}".format))

"""#### Euclidean Clustering Interpretation"""

plt.title('Complete Linkage')
Z1 = linkage(df,method='complete',metric='euclidean')
R1 = dendrogram(Z1);
Threshold = 0.7*max(Z1[:,2])
plt.axhline(y=Threshold, c='k',linewidth = 0.7)
# plt.savefig("Euclidean_complete.svg")
plt.show()

plt.title('Single Linkage')
Z2 = linkage(df,method='single',metric='euclidean')
R2 = dendrogram(Z2);
Threshold = 0.7*max(Z2[:,2])
plt.axhline(y=Threshold, c='k',linewidth = 0.7)
# plt.savefig("Euclidean_single.svg")
plt.show()

plt.title('Average Linkage')
Z3 = linkage(df,method='average',metric='euclidean')
R3 = dendrogram(Z3);
Threshold = 0.7*max(Z3[:,2])
plt.axhline(y=Threshold, c='k',linewidth = 0.7)
# plt.savefig("Euclidean_average.svg")
plt.show()

plt.title('Centroid Linkage')
Z3 = linkage(df,method='centroid',metric='euclidean')
R3 = dendrogram(Z3);
Threshold = 0.7*max(Z3[:,2])
plt.axhline(y=Threshold, c='k',linewidth = 0.7)
# plt.savefig("Euclidean_centroid.svg")
plt.show()

"""### Manhattan Distance

#### Clustering
"""

[fig, ax] = plt.subplots(nrows=2, ncols=2, figsize=(25, 20))

Z1 = linkage(df,method='complete',metric='cityblock')
R1 = dendrogram(Z1, ax=ax[0,0]);

Z2 = linkage(df,method='single',metric='cityblock')
R2 = dendrogram(Z2, ax=ax[0,1]);

Z3 = linkage(df,method='average',metric='cityblock')
R3 = dendrogram(Z3, ax=ax[1,0]);

fig.suptitle('Manhattan Clustering', fontsize= 30)
ax[0,0].set_title('Complete Linkage',fontsize= 20)
ax[0,1].set_title('Simple Linkage',fontsize= 20)
ax[1,0].set_title('Average Linkage',fontsize= 20)

ax = ax.ravel()
fig.delaxes(ax[3])
plt.tight_layout(pad = 2)
# plt.savefig("Manhattan.svg")
plt.show()

"""#### Thresholds"""

Top10_cutoffs_Manhattan = []

Z1 = linkage(df,method='complete',metric='cityblock')
Z2 = linkage(df,method='single',metric='cityblock')
Z3 = linkage(df,method='average',metric='cityblock')

Top10_cutoffs_Manhattan.append(list(Z1[-10:,2]))
Top10_cutoffs_Manhattan.append(list(Z2[-10:,2]))
Top10_cutoffs_Manhattan.append(list(Z3[-10:,2]))

Top_10_df = pd.DataFrame(Top10_cutoffs_Manhattan)
Top_10_df["Linkage"] = ['Complete', 'Single', 'Average']
Top_10_df["Threshold"] = [0.7*max(Z1[:,2]),0.7*max(Z2[:,2]),0.7*max(Z3[:,2])]
Top_10_df.insert(0, 'Linkage', Top_10_df.pop('Linkage'))
Top_10_df
# print(Top_10_df.to_latex(index=False,formatters={"Linkage": str.upper},float_format="{:.1f}".format))

"""#### Manhattan Clustering Interpretation"""

plt.title('Complete Linkage')
Z1 = linkage(df,method='complete',metric='cityblock')
R1 = dendrogram(Z1);
Threshold = 0.7*max(Z1[:,2])
plt.axhline(y=Threshold, c='k',linewidth = 0.7)
# plt.savefig("Manhattan_complete.svg")
plt.show()

plt.title('Single Linkage')
Z1 = linkage(df,method='single',metric='cityblock')
R1 = dendrogram(Z1);
Threshold = 0.7*max(Z1[:,2])
plt.axhline(y=Threshold, c='k',linewidth = 0.7)
# plt.savefig("Manhattan_single.svg")
plt.show()

plt.title('Average Linkage')
Z1 = linkage(df,method='average',metric='cityblock')
R1 = dendrogram(Z1);
Threshold = 0.7*max(Z1[:,2])
plt.axhline(y=Threshold, c='k',linewidth = 0.7)
# plt.savefig("Manhattan_average.svg")
plt.show()